import { NextRequest, NextResponse } from 'next/server'
import { getServerSession } from 'next-auth'
import { authOptions } from '@/lib/auth-config'
import { createAdminClient } from '@/lib/supabase'
import { ADRReport } from '@/types/report'
import { format } from 'date-fns'
import { vi } from 'date-fns/locale'

interface RouteParams {
  params: {
    id: string
  }
}

// Labels for display (Vietnamese)
const SEVERITY_LABELS = {
  'death': 'T·ª≠ vong',
  'life_threatening': 'ƒêe d·ªça t√≠nh m·∫°ng',
  'hospitalization': 'Nh·∫≠p vi·ªán/K√©o d√†i th·ªùi gian n·∫±m vi·ªán',
  'permanent_disability': 'T√†n t·∫≠t vƒ©nh vi·ªÖn/n·∫∑ng n·ªÅ',
  'birth_defect': 'D·ªã t·∫≠t thai nhi',
  'not_serious': 'Kh√¥ng nghi√™m tr·ªçng'
}

const OUTCOME_LABELS = {
  'death_by_adr': 'T·ª≠ vong do ADR',
  'death_unrelated': 'T·ª≠ vong kh√¥ng li√™n quan ƒë·∫øn thu·ªëc',
  'not_recovered': 'Ch∆∞a h·ªìi ph·ª•c',
  'recovering': 'ƒêang h·ªìi ph·ª•c',
  'recovered_with_sequelae': 'H·ªìi ph·ª•c c√≥ di ch·ª©ng',
  'recovered_without_sequelae': 'H·ªìi ph·ª•c kh√¥ng c√≥ di ch·ª©ng',
  'unknown': 'Kh√¥ng r√µ'
}

const CAUSALITY_LABELS = {
  'certain': 'Ch·∫Øc ch·∫Øn',
  'probable': 'C√≥ kh·∫£ nƒÉng',
  'possible': 'C√≥ th·ªÉ',
  'unlikely': 'Kh√¥ng ch·∫Øc ch·∫Øn',
  'unclassified': 'Ch∆∞a ph√¢n lo·∫°i',
  'unclassifiable': 'Kh√¥ng th·ªÉ ph√¢n lo·∫°i'
}

const GENDER_LABELS = {
  'male': 'Nam',
  'female': 'N·ªØ'
}

const REPORT_TYPE_LABELS = {
  'initial': 'L·∫ßn ƒë·∫ßu',
  'follow_up': 'B·ªï sung'
}

function formatDate(dateString: string): string {
  try {
    return format(new Date(dateString), 'dd/MM/yyyy', { locale: vi })
  } catch {
    return dateString
  }
}

function generatePrintHTML(report: ADRReport): string {
  // Generate suspected drugs rows exactly like template (i, ii, iii, iv)
  const suspectedDrugsRows = ['i', 'ii', 'iii', 'iv'].map((roman, index) => {
    const drug = report.suspected_drugs?.[index]
    if (drug) {
      // Split dosage and frequency 
      const dosageParts = (drug.dosage_and_frequency || '').split(/[\/,;]/)
      const singleDose = dosageParts[0]?.trim() || ''
      const frequency = dosageParts.length > 1 ? dosageParts.slice(1).join('/').trim() : ''
      
      return `
        <tr>
          <td class="center">${roman}</td>
          <td>${drug.drug_name}${drug.commercial_name ? ' (' + drug.commercial_name + ')' : ''}</td>
          <td>${drug.dosage_form || ''}</td>
          <td>${drug.manufacturer || ''}</td>
          <td>${drug.batch_number || ''}</td>
          <td>${singleDose}</td>
          <td>${frequency}</td>
          <td>${drug.route_of_administration || ''}</td>
          <td>${drug.start_date ? formatDate(drug.start_date) : ''}</td>
          <td>${drug.end_date ? formatDate(drug.end_date) : ''}</td>
          <td>${drug.indication || ''}</td>
        </tr>
      `
    }
    return `<tr><td class="center">${roman}</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>`
  }).join('')

  // Generate reaction checkboxes exactly like template  
  const drugReactionsRows = ['i', 'ii', 'iii', 'iv'].map((roman, index) => {
    const drug = report.suspected_drugs?.[index]
    const dechallengeValue = drug?.reaction_improved_after_stopping || 'no_information'
    const rechallengeValue = drug?.reaction_reoccurred_after_rechallenge || 'no_information'
    
    return `
      <tr>
        <td class="center">${roman}</td>
        <td>
          <input type="checkbox"${dechallengeValue === 'yes' ? ' checked' : ''}> C√≥ 
          <input type="checkbox"${dechallengeValue === 'no' ? ' checked' : ''}> Kh√¥ng 
          <input type="checkbox"${dechallengeValue === 'not_stopped' ? ' checked' : ''}> Kh√¥ng ng·ª´ng/gi·∫£m li·ªÅu 
          <input type="checkbox"${dechallengeValue === 'no_information' ? ' checked' : ''}> Kh√¥ng c√≥ th√¥ng tin
        </td>
        <td>
          <input type="checkbox"${rechallengeValue === 'yes' ? ' checked' : ''}> C√≥ 
          <input type="checkbox"${rechallengeValue === 'no' ? ' checked' : ''}> Kh√¥ng 
          <input type="checkbox"${rechallengeValue === 'not_rechallenged' ? ' checked' : ''}> Kh√¥ng t√°i s·ª≠ d·ª•ng 
          <input type="checkbox"${rechallengeValue === 'no_information' ? ' checked' : ''}> Kh√¥ng c√≥ th√¥ng tin
        </td>
      </tr>
    `
  }).join('')

  // Generate concurrent drugs rows (5 rows max)
  const concurrentDrugsRows = Array.from({length: 5}, (_, index) => {
    const drug = report.concurrent_drugs?.[index]
    if (drug) {
      return `
        <tr>
          <td>${drug.drug_name}</td>
          <td>${drug.dosage_form_strength || ''}</td>
          <td>${drug.start_date ? formatDate(drug.start_date) : ''}</td>
          <td>${drug.end_date ? formatDate(drug.end_date) : ''}</td>
        </tr>
      `
    }
    return '<tr><td></td><td></td><td></td><td></td></tr>'
  }).join('')

  return `
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>B√°o c√°o ADR - ${report.report_code}</title>
    <style>
        /* Exact copy of template.html styles */
        body {
            font-family: Arial, sans-serif;
            font-size: 10px;
            background-color: #ccc;
            margin: 0;
            padding: 15px;
        }
        .container {
            width: 800px;
            background-color: #fff;
            margin: auto;
            border: 2px solid black;
            padding: 15px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            border: 1px solid black;
        }
        td, th {
            border: 1px solid black;
            padding: 4px;
            vertical-align: top;
        }
        input[type="text"], textarea {
            width: 98%;
            border: none;
            border-bottom: 1px dotted #000;
            font-family: Arial, sans-serif;
            font-size: 10px;
            background: transparent;
            color: #000;
        }
        textarea {
            resize: vertical;
        }
        input[type="checkbox"], input[type="radio"] {
            margin-right: 5px;
        }
        .header-title {
            text-align: center;
            font-weight: bold;
        }
        .header-title h1 {
            font-size: 16px;
            margin: 5px 0;
        }
        .header-title p {
            font-size: 12px;
            margin: 5px 0;
        }
        .section-header {
            background-color: #000;
            color: #fff;
            font-weight: bold;
            padding: 5px;
            text-align: left;
        }
        .no-border, .no-border td {
            border: none;
        }
        .full-width-cell {
            padding: 0;
        }
        .full-width-cell table {
            border: none;
        }
        .full-width-cell table td {
            border-top: 1px solid black;
            border-bottom: 1px solid black;
            border-left: none;
            border-right: none;
        }
        .small-text {
            font-size: 9px;
        }
        .light-blue-bg {
            background-color: #e6f2ff;
        }
        .center {
            text-align: center;
        }
        
        /* Print optimizations */
        @media print {
            body {
                background-color: #fff;
                padding: 10px;
                font-size: 10px;
            }
            .container {
                border: 2px solid black;
            }
            .no-print {
                display: none !important;
            }
            .page-break {
                page-break-before: always;
            }
            table {
                page-break-inside: avoid;
            }
        }

        /* Print button styles */
        .print-actions {
            position: fixed;
            top: 20px;
            right: 20px;
            background: white;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            border: 1px solid #ccc;
            font-size: 14px;
        }

        .print-btn {
            background: #3b82f6;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            margin-right: 10px;
            transition: background-color 0.2s;
        }

        .print-btn:hover {
            background: #2563eb;
        }

        .close-btn {
            background: #6b7280;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .close-btn:hover {
            background: #4b5563;
        }
        
        /* Signature box */
        .signature-box {
            height: 40px;
            border: 1px dotted #000;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="print-actions no-print">
        <button class="print-btn" onclick="window.print()">üñ®Ô∏è In b√°o c√°o</button>
        <button class="close-btn" onclick="window.close()">‚úï ƒê√≥ng</button>
    </div>

    <div class="container">
        <!-- HEADER - Exact copy from template -->
        <table class="no-border">
            <tr>
                <td style="width: 50%; font-weight: bold; font-size: 12px;">PDF FORM</td>
                <td style="width: 50%; text-align: right; font-weight: bold; font-size: 16px;">ADR</td>
            </tr>
            <tr>
                <td colspan="2" class="header-title">
                    <h1>B√ÅO C√ÅO PH·∫¢N ·ª®NG C√ì H·∫†I C·ª¶A THU·ªêC</h1>
                    <p>TH√îNG TIN V·ªÄ NG∆Ø·ªúI B√ÅO C√ÅO, B·ªÜNH NH√ÇN V√Ä ƒê∆†N V·ªä B√ÅO C√ÅO</p>
                    <p style="font-weight: normal;">S·∫º ƒê∆Ø·ª¢C B·∫¢O M·∫¨T</p>
                </td>
            </tr>
        </table>
        
        <table class="no-border" style="margin-top: -10px;">
            <tr>
                <td style="width: 60%; vertical-align: bottom;">
                    <i>Xin anh/ch·ªã h√£y b√°o c√°o k·ªÉ c·∫£ khi kh√¥ng ch·∫Øc ch·∫Øn v·ªÅ s·∫£n ph·∫©m ƒë√£ g√¢y ra ph·∫£n ·ª©ng v√†/ho·∫∑c kh√¥ng c√≥ ƒë·∫ßy ƒë·ªß c√°c th√¥ng tin</i>
                </td>
                <td style="width: 40%;">
                    <table style="border: 2px solid black;">
                        <tr><td>N∆°i b√°o c√°o: <input type="text" value="${report.organization}"></td></tr>
                        <tr><td>M√£ s·ªë b√°o c√°o c·ªßa ƒë∆°n v·ªã: <input type="text" value="${report.report_code}"></td></tr>
                        <tr><td>M√£ s·ªë b√°o c√°o (do Trung t√¢m qu·ªëc gia qu·∫£n l√Ω): <input type="text" value="${report.report_code}"></td></tr>
                    </table>
                </td>
            </tr>
        </table>

        <!-- A. TH√îNG TIN V·ªÄ B·ªÜNH NH√ÇN -->
        <div class="section-header">A. TH√îNG TIN V·ªÄ B·ªÜNH NH√ÇN</div>
        <table>
            <tr>
                <td style="width: 40%;">1. H·ªç v√† t√™n: <input type="text" style="width: 80%;" value="${report.patient_name}"></td>
                <td style="width: 25%;">2. Ng√†y sinh: <input type="text" style="width: 70%;" value="${formatDate(report.patient_birth_date)}"><br>Ho·∫∑c tu·ªïi: <input type="text" style="width: 70%;" value="${report.patient_age}"></td>
                <td style="width: 20%;">3. Gi·ªõi t√≠nh <br> <input type="checkbox"${report.patient_gender === 'male' ? ' checked' : ''}> Nam <input type="checkbox"${report.patient_gender === 'female' ? ' checked' : ''}> N·ªØ</td>
                <td style="width: 15%;">4. C√¢n n·∫∑ng <br> <input type="text" style="width: 50%;" value="${report.patient_weight || ''}"> kg</td>
            </tr>
        </table>

        <!-- B. TH√îNG TIN V·ªÄ PH·∫¢N ·ª®NG C√ì H·∫†I (ADR) -->
        <div class="section-header">B. TH√îNG TIN V·ªÄ PH·∫¢N ·ª®NG C√ì H·∫†I (ADR)</div>
        <table>
            <tr>
                <td style="width: 50%;">5. Ng√†y xu·∫•t hi·ªán ph·∫£n ·ª©ng: <input type="text" value="${formatDate(report.adr_occurrence_date)}"></td>
                <td>6. Ph·∫£n ·ª©ng xu·∫•t hi·ªán sau bao l√¢u (t√≠nh t·ª´ l·∫ßn d√πng cu·ªëi c√πng c·ªßa thu·ªëc nghi ng·ªù): <input type="text" value="${report.reaction_onset_time || ''}"></td>
            </tr>
            <tr>
                <td colspan="2" class="full-width-cell">
                    <table>
                        <tr>
                            <td class="light-blue-bg" style="width: 50%;">7. M√¥ t·∫£ bi·ªÉu hi·ªán ADR</td>
                            <td class="light-blue-bg" style="width: 50%;">8. C√°c x√©t nghi·ªám li√™n quan ƒë·∫øn ph·∫£n ·ª©ng</td>
                        </tr>
                        <tr>
                            <td style="height: 100px;"><textarea style="height: 95px;">${report.adr_description}</textarea></td>
                            <td style="height: 100px;"><textarea style="height: 95px;">${report.related_tests || ''}</textarea></td>
                        </tr>
                        <tr>
                            <td class="light-blue-bg">9. Ti·ªÅn s·ª≠ (d·ªã ·ª©ng, thai ngh√©n, nghi·ªán thu·ªëc l√°, nghi·ªán r∆∞·ª£u, b·ªánh gan, b·ªánh th·∫≠n...)</td>
                            <td class="light-blue-bg">10. C√°ch x·ª≠ tr√≠ ph·∫£n ·ª©ng</td>
                        </tr>
                        <tr>
                            <td style="height: 80px;"><textarea style="height: 75px;">${report.medical_history || ''}</textarea></td>
                            <td style="height: 80px;"><textarea style="height: 75px;">${report.treatment_response || ''}</textarea></td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr>
                <td colspan="3" class="full-width-cell">
                     <table class="no-border">
                        <tr>
                            <td style="width: 33.3%;">
                                11. M·ª©c ƒë·ªô nghi√™m tr·ªçng c·ªßa ph·∫£n ·ª©ng<br>
                                <input type="checkbox"${report.severity_level === 'death' ? ' checked' : ''}> T·ª≠ vong <br>
                                <input type="checkbox"${report.severity_level === 'life_threatening' ? ' checked' : ''}> ƒêe d·ªça t√≠nh m·∫°ng
                            </td>
                            <td style="width: 33.3%;">
                                <br>
                                <input type="checkbox"${report.severity_level === 'hospitalization' ? ' checked' : ''}> Nh·∫≠p vi·ªán/K√©o d√†i th·ªùi gian n·∫±m vi·ªán <br>
                                <input type="checkbox"${report.severity_level === 'permanent_disability' ? ' checked' : ''}> T√†n t·∫≠t vƒ©nh vi·ªÖn/n·∫∑ng n·ªÅ
                            </td>
                            <td style="width: 33.3%;">
                                <br>
                                <input type="checkbox"${report.severity_level === 'birth_defect' ? ' checked' : ''}> D·ªã t·∫≠t thai nhi <br>
                                <input type="checkbox"${report.severity_level === 'not_serious' ? ' checked' : ''}> Kh√¥ng nghi√™m tr·ªçng
                            </td>
                        </tr>
                        <tr>
                            <td>
                                12. K·∫øt qu·∫£ sau khi x·ª≠ tr√≠ ph·∫£n ·ª©ng<br>
                                <input type="checkbox"${report.outcome_after_treatment === 'death_by_adr' ? ' checked' : ''}> T·ª≠ vong do ADR<br>
                                <input type="checkbox"${report.outcome_after_treatment === 'death_unrelated' ? ' checked' : ''}> T·ª≠ vong kh√¥ng li√™n quan ƒë·∫øn thu·ªëc
                            </td>
                            <td>
                                <br>
                                <input type="checkbox"${report.outcome_after_treatment === 'not_recovered' ? ' checked' : ''}> Ch∆∞a h·ªìi ph·ª•c<br>
                                <input type="checkbox"${report.outcome_after_treatment === 'recovering' ? ' checked' : ''}> ƒêang h·ªìi ph·ª•c
                            </td>
                            <td>
                                <br>
                                <input type="checkbox"${report.outcome_after_treatment === 'recovered_with_sequelae' ? ' checked' : ''}> H·ªìi ph·ª•c c√≥ di ch·ª©ng<br>
                                <input type="checkbox"${report.outcome_after_treatment === 'recovered_without_sequelae' ? ' checked' : ''}> H·ªìi ph·ª•c kh√¥ng c√≥ di ch·ª©ng
                            </td>
                             <td>
                                <br>
                                <input type="checkbox"${report.outcome_after_treatment === 'unknown' ? ' checked' : ''}> Kh√¥ng r√µ
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
        
        <!-- C. TH√îNG TIN V·ªÄ THU·ªêC NGHI NG·ªú G√ÇY ADR -->
        <div class="section-header">C. TH√îNG TIN V·ªÄ THU·ªêC NGHI NG·ªú G√ÇY ADR</div>
        <table>
            <tr class="center light-blue-bg">
                <td style="width: 4%;">STT</td>
                <td style="width: 15%;">13. Thu·ªëc (t√™n g·ªëc v√† t√™n th∆∞∆°ng m·∫°i)</td>
                <td style="width: 10%;">D·∫°ng b√†o ch·∫ø, h√†m l∆∞·ª£ng</td>
                <td style="width: 10%;">Nh√† s·∫£n xu·∫•t</td>
                <td style="width: 8%;">S·ªë l√¥</td>
                <td style="width: 8%;">Li·ªÅu d√πng m·ªôt l·∫ßn</td>
                <td style="width: 10%;">S·ªë l·∫ßn d√πng trong ng√†y/ tu·∫ßn/ th√°ng</td>
                <td style="width: 8%;">ƒê∆∞·ªùng d√πng</td>
                <td colspan="2">Ng√†y ƒëi·ªÅu tr·ªã (ng√†y/th√°ng/nƒÉm)</td>
                <td style="width: 15%;">L√Ω do d√πng thu·ªëc</td>
            </tr>
            <tr class="center light-blue-bg">
                <td colspan="8"></td>
                <td style="width: 7%;">B·∫Øt ƒë·∫ßu</td>
                <td style="width: 7%;">K·∫øt th√∫c</td>
                <td></td>
            </tr>
            ${suspectedDrugsRows}
        </table>
        
        <table>
            <tr class="light-blue-bg">
                <td class="center" style="width: 4%;">STT (T∆∞∆°ng ·ª©ng 13.)</td>
                <td class="center">14. Sau khi ng·ª´ng/gi·∫£m li·ªÅu c·ªßa thu·ªëc b·ªã nghi ng·ªù, ph·∫£n ·ª©ng c√≥ ƒë∆∞·ª£c c·∫£i thi·ªán kh√¥ng?</td>
                <td class="center">15. T√°i s·ª≠ d·ª•ng thu·ªëc b·ªã nghi ng·ªù c√≥ xu·∫•t hi·ªán l·∫°i ph·∫£n ·ª©ng kh√¥ng?</td>
            </tr>
            ${drugReactionsRows}
        </table>

        <!-- Section 16: Concurrent Drugs Table -->
        <table>
            <tr class="light-blue-bg">
                <td colspan="4"><strong>16. THU·ªêC D√ôNG ƒê·ªíNG TH·ªúI</strong></td>
            </tr>
            <tr class="center light-blue-bg">
                <td style="width: 25%;"><strong>T√™n thu·ªëc</strong></td>
                <td style="width: 25%;"><strong>D·∫°ng b√†o ch·∫ø, h√†m l∆∞·ª£ng</strong></td>
                <td style="width: 25%;"><strong>Ng√†y b·∫Øt ƒë·∫ßu ƒëi·ªÅu tr·ªã</strong></td>
                <td style="width: 25%;"><strong>Ng√†y k·∫øt th√∫c ƒëi·ªÅu tr·ªã</strong></td>
            </tr>
            ${concurrentDrugsRows}
        </table>
        
        <!-- D. PH·∫¶N TH·∫®M ƒê·ªäNH -->
        <div class="section-header">D. PH·∫¶N TH·∫®M ƒê·ªäNH ADR C·ª¶A ƒê∆†N V·ªä</div>
        <table>
            <tr>
                <td style="width: 50%;">17. ƒê√°nh gi√° m·ªëi li√™n quan gi·ªØa thu·ªëc v√† ADR: <br>
                    <input type="checkbox"${report.causality_assessment === 'certain' ? ' checked' : ''}> Ch·∫Øc ch·∫Øn <input type="checkbox"${report.causality_assessment === 'unlikely' ? ' checked' : ''}> Kh√¥ng ch·∫Øc ch·∫Øn <br>
                    <input type="checkbox"${report.causality_assessment === 'probable' ? ' checked' : ''}> C√≥ kh·∫£ nƒÉng <input type="checkbox"${report.causality_assessment === 'unclassified' ? ' checked' : ''}> Ch∆∞a ph√¢n lo·∫°i <br>
                    <input type="checkbox"${report.causality_assessment === 'possible' ? ' checked' : ''}> C√≥ th·ªÉ <input type="checkbox"${report.causality_assessment === 'unclassifiable' ? ' checked' : ''}> Kh√¥ng th·ªÉ ph√¢n lo·∫°i
                </td>
                <td style="width: 50%;" rowspan="2">19. Ph·∫ßn b√¨nh lu·∫≠n c·ªßa c√°n b·ªô y t·∫ø (n·∫øu c√≥)
                    <textarea style="height: 80px;">${report.medical_staff_comment || ''}</textarea>
                </td>
            </tr>
            <tr>
                <td>18. ƒê∆°n v·ªã th·∫©m ƒë·ªãnh ADR theo thang n√†o? <br>
                    <input type="checkbox"${report.assessment_scale === 'who' ? ' checked' : ''}> Thang WHO <input type="checkbox"${report.assessment_scale === 'naranjo' ? ' checked' : ''}> Thang Naranjo <input type="checkbox"> Thang kh√°c: <input type="text" style="width: 20%;">
                </td>
            </tr>
        </table>
        
        <!-- E. TH√îNG TIN V·ªÄ NG∆Ø·ªúI B√ÅO C√ÅO -->
        <div class="section-header">E. TH√îNG TIN V·ªÄ NG∆Ø·ªúI B√ÅO C√ÅO</div>
        <table>
            <tr>
                <td style="width: 50%;">20. H·ªç v√† t√™n: <input type="text" style="width: 80%;" value="${report.reporter_name}"></td>
                <td>Ngh·ªÅ nghi·ªáp/Ch·ª©c v·ª•: <input type="text" style="width: 70%;" value="${report.reporter_profession}"></td>
            </tr>
            <tr>
                <td>ƒêi·ªán tho·∫°i li√™n l·∫°c: <input type="text" style="width: 75%;" value="${report.reporter_phone || ''}"></td>
                <td>Email: <input type="text" style="width: 90%;" value="${report.reporter_email || ''}"></td>
            </tr>
            <tr>
                <td>21. Ch·ªØ k√Ω: <div class="signature-box"></div></td>
                <td>
                    22. D·∫°ng b√°o c√°o: <input type="checkbox"${report.report_type === 'initial' ? ' checked' : ''}> L·∫ßn ƒë·∫ßu <input type="checkbox"${report.report_type === 'follow_up' ? ' checked' : ''}> B·ªï sung <br><br>
                    23. Ng√†y b√°o c√°o: <input type="text" value="${formatDate(report.report_date)}">
                </td>
            </tr>
        </table>
        
        <div style="text-align:center; font-weight:bold; padding: 5px;">Xin ch√¢n th√†nh c·∫£m ∆°n!</div>
    </div>

    <script>
        // Auto focus when page loads
        window.addEventListener('load', function() {
            console.log('Form-style print view loaded for report: ${report.report_code}');
        });
        
        // Handle keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey && e.key === 'p') {
                e.preventDefault();
                window.print();
            }
            if (e.key === 'Escape') {
                window.close();
            }
        });
    </script>
</body>
</html>`
}

export async function GET(request: NextRequest, { params }: RouteParams) {
  const reportId = params.id

  try {
    const session = await getServerSession(authOptions)
    
    if (!session) {
      return NextResponse.json(
        { error: 'Unauthorized' },
        { status: 401 }
      )
    }

    console.log('=== PRINT VIEW REQUEST ===')
    console.log('Report ID:', reportId)
    console.log('User:', session.user.email)

    // Get the report with suspected and concurrent drugs
    const supabase = createAdminClient()
    const { data: reportData, error } = await supabase
      .from('adr_reports')
      .select(`
        *,
        suspected_drugs(*),
        concurrent_drugs(*)
      `)
      .eq('id', reportId)
      .single()

    if (error || !reportData) {
      console.error('Report not found:', error)
      return NextResponse.json(
        { error: 'Kh√¥ng t√¨m th·∫•y b√°o c√°o' },
        { status: 404 }
      )
    }

    const report = reportData as ADRReport
    console.log('Report found:', report.report_code)

    // Generate form-style HTML exactly like template.html
    const html = generatePrintHTML(report)
    
    console.log('‚úÖ Form-style HTML generated successfully (template match)')

    // Return HTML response
    return new NextResponse(html, {
      status: 200,
      headers: {
        'Content-Type': 'text/html; charset=utf-8',
        'Cache-Control': 'no-cache, no-store, must-revalidate',
        'Pragma': 'no-cache',
        'Expires': '0'
      },
    })

  } catch (error) {
    console.error('Print view error:', error)
    return NextResponse.json(
      { 
        error: 'C√≥ l·ªói x·∫£y ra khi t·∫°o view in', 
        details: error instanceof Error ? error.message : 'Unknown error',
        type: 'Error'
      },
      { status: 500 }
    )
  }
}