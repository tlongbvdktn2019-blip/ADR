-- üîß FIX ENUM ERROR
-- S·ª≠a l·ªói enum quiz_category trong script

-- =====================================
-- OPTION A: Th√™m gi√° tr·ªã m·ªõi v√†o enum (n·∫øu c·∫ßn)
-- =====================================
-- Uncomment n·∫øu mu·ªën th√™m gi√° tr·ªã m·ªõi v√†o enum
/*
ALTER TYPE quiz_category ADD VALUE 'adr_basic';
ALTER TYPE quiz_category ADD VALUE 'adr_reporting';
ALTER TYPE quiz_category ADD VALUE 'adr_management';
*/

-- =====================================
-- OPTION B: S·ª≠ d·ª•ng gi√° tr·ªã enum c√≥ s·∫µn
-- =====================================
-- Ki·ªÉm tra enum values c√≥ s·∫µn
SELECT 'AVAILABLE ENUM VALUES' as info;
SELECT 
    enumlabel as available_values,
    enumsortorder as order_position
FROM pg_enum e
JOIN pg_type t ON e.enumtypid = t.oid
WHERE t.typname = 'quiz_category'
ORDER BY enumsortorder;

-- =====================================
-- OPTION C: Thay ƒë·ªïi c·ªôt th√†nh VARCHAR (n·∫øu c·∫ßn linh ho·∫°t h∆°n)
-- =====================================
-- Uncomment n·∫øu mu·ªën ƒë·ªïi t·ª´ enum sang varchar
/*
ALTER TABLE quiz_categories 
ALTER COLUMN category_key TYPE VARCHAR(50);
*/

-- =====================================
-- SAFE INSERT: S·ª≠ d·ª•ng gi√° tr·ªã c√≥ s·∫µn ho·∫∑c t·∫°o m·ªõi an to√†n
-- =====================================

-- C√°ch 1: Insert v·ªõi NULL category_key tr∆∞·ªõc, sau ƒë√≥ update
INSERT INTO quiz_categories (name, description, total_questions, is_active)
SELECT 'ADR C∆° b·∫£n', 'Ki·∫øn th·ª©c c∆° b·∫£n v·ªÅ t√°c d·ª•ng kh√¥ng mong mu·ªën c·ªßa thu·ªëc', 0, true
WHERE NOT EXISTS (SELECT 1 FROM quiz_categories WHERE name = 'ADR C∆° b·∫£n');

INSERT INTO quiz_categories (name, description, total_questions, is_active)
SELECT 'B√°o c√°o ADR', 'Quy tr√¨nh v√† c√°ch th·ª©c b√°o c√°o ADR', 0, true
WHERE NOT EXISTS (SELECT 1 FROM quiz_categories WHERE name = 'B√°o c√°o ADR');

-- C√°ch 2: N·∫øu bi·∫øt enum values, s·ª≠ d·ª•ng ch√∫ng
-- V√≠ d·ª•: n·∫øu enum c√≥ 'basic', 'reporting' thay v√¨ 'adr_basic', 'adr_reporting'
/*
INSERT INTO quiz_categories (name, category_key, description, total_questions, is_active)
SELECT 'ADR C∆° b·∫£n', 'basic', 'Ki·∫øn th·ª©c c∆° b·∫£n v·ªÅ t√°c d·ª•ng kh√¥ng mong mu·ªën c·ªßa thu·ªëc', 0, true
WHERE NOT EXISTS (SELECT 1 FROM quiz_categories WHERE category_key = 'basic');

INSERT INTO quiz_categories (name, category_key, description, total_questions, is_active)
SELECT 'B√°o c√°o ADR', 'reporting', 'Quy tr√¨nh v√† c√°ch th·ª©c b√°o c√°o ADR', 0, true
WHERE NOT EXISTS (SELECT 1 FROM quiz_categories WHERE category_key = 'reporting');
*/

SELECT '‚úÖ SAFE CATEGORIES INSERTED' as status;

-- =====================================
-- FALLBACK: T·∫°o function ƒë·ªÉ handle enum safely
-- =====================================
CREATE OR REPLACE FUNCTION safe_insert_category(
    p_name TEXT,
    p_key TEXT,
    p_description TEXT
)
RETURNS UUID
LANGUAGE plpgsql
AS $$
DECLARE
    category_id UUID;
    enum_exists BOOLEAN;
BEGIN
    -- Check if enum value exists
    SELECT EXISTS (
        SELECT 1 FROM pg_enum e
        JOIN pg_type t ON e.enumtypid = t.oid
        WHERE t.typname = 'quiz_category' AND e.enumlabel = p_key
    ) INTO enum_exists;
    
    -- Insert without category_key if enum value doesn't exist
    IF NOT enum_exists THEN
        INSERT INTO quiz_categories (name, description, total_questions, is_active)
        VALUES (p_name, p_description, 0, true)
        RETURNING id INTO category_id;
        
        RAISE NOTICE 'Inserted category % without category_key (enum value % not found)', p_name, p_key;
    ELSE
        -- Insert with category_key if enum value exists
        INSERT INTO quiz_categories (name, category_key, description, total_questions, is_active)
        VALUES (p_name, p_key::quiz_category, p_description, 0, true)
        ON CONFLICT (category_key) DO NOTHING
        RETURNING id INTO category_id;
        
        RAISE NOTICE 'Inserted category % with category_key %', p_name, p_key;
    END IF;
    
    RETURN category_id;
END;
$$;

-- Test safe function
SELECT 'TESTING SAFE FUNCTION' as section;
-- SELECT safe_insert_category('Test ADR Category', 'test_key', 'Test description');

SELECT 'üîß ENUM ERROR FIX COMPLETE' as status,
       'Use safe methods to insert categories' as recommendation;






