-- ‚ö° QUICK ADMIN FIX
-- Script fix nhanh cho l·ªói admin kh√¥ng xem/t·∫°o ƒë∆∞·ª£c c√¢u h·ªèi

-- OPTION A: Fix nhanh b·∫±ng c√°ch t·∫Øt RLS t·∫°m th·ªùi
-- (Uncomment n·∫øu c·∫ßn fix ngay l·∫≠p t·ª©c)
/*
ALTER TABLE quiz_questions DISABLE ROW LEVEL SECURITY;
SELECT '‚ö° RLS DISABLED - Admin can now create questions' as status;
*/

-- OPTION B: Fix b·∫±ng c√°ch t·∫°o policy ƒë∆°n gi·∫£n
-- Drop policies c≈©
DROP POLICY IF EXISTS "admin_all_quiz_access" ON quiz_questions;
DROP POLICY IF EXISTS "users_view_quiz" ON quiz_questions;
DROP POLICY IF EXISTS "users_view_active_questions" ON quiz_questions;
DROP POLICY IF EXISTS "admin_full_access_questions" ON quiz_questions;

-- T·∫°o policy cho ph√©p t·∫•t c·∫£ authenticated users l√†m m·ªçi vi·ªác (TEMPORARY)
CREATE POLICY "temp_allow_all_authenticated" ON quiz_questions
    FOR ALL 
    TO authenticated
    USING (true)
    WITH CHECK (true);

SELECT '‚úÖ TEMPORARY POLICY CREATED - All authenticated users can manage questions' as status;

-- OPTION C: Set current user as admin
-- (Uncomment n·∫øu user hi·ªán t·∫°i ch∆∞a c√≥ role admin)
/*
UPDATE users 
SET role = 'admin'
WHERE id::text = auth.uid()::text;

SELECT 'üëë CURRENT USER SET AS ADMIN' as status;
*/

-- Ki·ªÉm tra k·∫øt qu·∫£
SELECT 'CURRENT USER INFO' as test;
SELECT 
    u.email,
    u.name,
    u.role,
    CASE 
        WHEN u.role = 'admin' THEN '‚úÖ Is Admin'
        ELSE '‚ùå Not Admin'
    END as admin_status
FROM users u 
WHERE u.id::text = auth.uid()::text;

SELECT 'QUIZ QUESTIONS COUNT' as test;
SELECT COUNT(*) as total_questions FROM quiz_questions;

SELECT 'üéâ QUICK FIX COMPLETE!' as status,
       'Try creating quiz questions now' as action;






