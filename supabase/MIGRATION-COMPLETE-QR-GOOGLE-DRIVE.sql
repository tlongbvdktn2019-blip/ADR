-- =====================================================
-- MIGRATION HO√ÄN CH·ªàNH: QR CODE V·ªöI GOOGLE DRIVE
-- Ch·∫°y to√†n b·ªô file n√†y trong Supabase SQL Editor
-- =====================================================

-- ============= B∆Ø·ªöC 1: C·∫¨P NH·∫¨T SCHEMA =============

-- 1.1. Th√™m c·ªôt google_drive_url
ALTER TABLE allergy_cards 
ADD COLUMN IF NOT EXISTS google_drive_url TEXT;

-- 1.2. B·ªè NOT NULL constraint cho qr_code_data
ALTER TABLE allergy_cards 
ALTER COLUMN qr_code_data DROP NOT NULL;

-- 1.3. B·ªè NOT NULL constraint cho qr_code_url (n·∫øu c√≥)
ALTER TABLE allergy_cards 
ALTER COLUMN qr_code_url DROP NOT NULL;

-- 1.4. Th√™m comment gi·∫£i th√≠ch
COMMENT ON COLUMN allergy_cards.google_drive_url IS 
'Link Google Drive ch·ª©a file th·∫ª d·ªã ·ª©ng PDF/image. QR code s·∫Ω ch·ª©a link n√†y.';

COMMENT ON COLUMN allergy_cards.qr_code_data IS 
'(Deprecated) QR code data - gi·ªù d√πng qr_code_url v·ªõi Google Drive link';

COMMENT ON COLUMN allergy_cards.qr_code_url IS 
'Data URL c·ªßa QR code image (base64). QR ch·ª©a link Google Drive.';

-- 1.5. T·∫°o index cho t√¨m ki·∫øm nhanh
CREATE INDEX IF NOT EXISTS idx_allergy_cards_drive_url 
ON allergy_cards(google_drive_url) 
WHERE google_drive_url IS NOT NULL;

CREATE INDEX IF NOT EXISTS idx_allergy_cards_status 
ON allergy_cards(status) 
WHERE status = 'active';

-- ============= B∆Ø·ªöC 2: C·∫¨P NH·∫¨T VIEW =============

-- 2.1. X√≥a view c≈©
DROP VIEW IF EXISTS allergy_cards_with_details CASCADE;

-- 2.2. T·∫°o view m·ªõi v·ªõi google_drive_url
CREATE OR REPLACE VIEW allergy_cards_with_details AS
SELECT 
  ac.*,
  -- Aggregated allergies
  COALESCE(
    jsonb_agg(
      jsonb_build_object(
        'id', ca.id,
        'allergen_name', ca.allergen_name,
        'certainty_level', ca.certainty_level,
        'clinical_manifestation', ca.clinical_manifestation,
        'severity_level', ca.severity_level,
        'reaction_type', ca.reaction_type
      ) ORDER BY 
        CASE ca.severity_level 
          WHEN 'life_threatening' THEN 1
          WHEN 'severe' THEN 2
          WHEN 'moderate' THEN 3
          WHEN 'mild' THEN 4
          ELSE 5
        END,
        ca.created_at
    ) FILTER (WHERE ca.id IS NOT NULL),
    '[]'::jsonb
  ) as allergies,
  -- User info
  u.name as issued_by_name,
  u.email as issued_by_email,
  u.organization as issued_by_organization
FROM allergy_cards ac
LEFT JOIN card_allergies ca ON ac.id = ca.card_id
LEFT JOIN users u ON ac.issued_by_user_id = u.id
GROUP BY ac.id, u.name, u.email, u.organization;

-- Grant permissions
GRANT SELECT ON allergy_cards_with_details TO authenticated;
GRANT SELECT ON allergy_cards_with_details TO anon;

-- ============= B∆Ø·ªöC 3: C·∫¨P NH·∫¨T D·ªÆ LI·ªÜU C≈® (N·∫æU C·∫¶N) =============

-- 3.1. Set NULL cho qr_code_data c·ªßa c√°c th·∫ª c≈© kh√¥ng c√≥ Google Drive URL
UPDATE allergy_cards 
SET qr_code_data = NULL 
WHERE google_drive_url IS NULL 
  AND qr_code_data IS NOT NULL;

-- 3.2. Log s·ªë l∆∞·ª£ng th·∫ª ƒë√£ c·∫≠p nh·∫≠t
DO $$
DECLARE
  updated_count INTEGER;
BEGIN
  GET DIAGNOSTICS updated_count = ROW_COUNT;
  RAISE NOTICE 'ƒê√£ c·∫≠p nh·∫≠t % th·∫ª c≈©', updated_count;
END $$;

-- ============= B∆Ø·ªöC 4: KI·ªÇM TRA K·∫æT QU·∫¢ =============

-- 4.1. Ki·ªÉm tra columns
SELECT 
  'Column Check' as test_name,
  column_name,
  data_type,
  is_nullable,
  CASE 
    WHEN is_nullable = 'YES' THEN '‚úÖ'
    ELSE '‚ùå'
  END as status
FROM information_schema.columns
WHERE table_name = 'allergy_cards' 
  AND column_name IN ('google_drive_url', 'qr_code_data', 'qr_code_url')
ORDER BY column_name;

-- 4.2. Ki·ªÉm tra indexes
SELECT 
  'Index Check' as test_name,
  indexname,
  indexdef
FROM pg_indexes
WHERE tablename = 'allergy_cards'
  AND indexname LIKE 'idx_allergy_cards_%'
ORDER BY indexname;

-- 4.3. Ki·ªÉm tra view
SELECT 
  'View Check' as test_name,
  table_name,
  CASE 
    WHEN table_name = 'allergy_cards_with_details' THEN '‚úÖ View exists'
    ELSE '‚ùå View not found'
  END as status
FROM information_schema.views
WHERE table_name = 'allergy_cards_with_details';

-- 4.4. Th·ªëng k√™ th·∫ª hi·ªán t·∫°i
SELECT 
  'Card Statistics' as test_name,
  COUNT(*) as total_cards,
  COUNT(google_drive_url) as cards_with_drive_url,
  COUNT(qr_code_url) as cards_with_qr,
  COUNT(CASE WHEN status = 'active' THEN 1 END) as active_cards
FROM allergy_cards;

-- ============= B∆Ø·ªöC 5: FINAL MESSAGE =============

SELECT 
  'üéâ MIGRATION HO√ÄN T·∫§T!' as status,
  'H·ªá th·ªëng QR v·ªõi Google Drive ƒë√£ s·∫µn s√†ng' as message,
  NOW() as completed_at;

-- ============= GHI CH√ö =============
/*
MIGRATION ƒê√É TH·ª∞C HI·ªÜN:

‚úÖ 1. Th√™m c·ªôt google_drive_url v√†o allergy_cards
‚úÖ 2. B·ªè NOT NULL constraint cho qr_code_data
‚úÖ 3. B·ªè NOT NULL constraint cho qr_code_url  
‚úÖ 4. Th√™m comments cho c√°c c·ªôt
‚úÖ 5. T·∫°o indexes cho performance
‚úÖ 6. C·∫≠p nh·∫≠t view allergy_cards_with_details
‚úÖ 7. Grant permissions cho authenticated/anon users
‚úÖ 8. C·∫≠p nh·∫≠t d·ªØ li·ªáu c≈© (set NULL)

B∆Ø·ªöC TI·∫æP THEO:

1. Test t·∫°o th·∫ª m·ªõi v·ªõi Google Drive URL
2. Ki·ªÉm tra QR code generation
3. Test qu√©t QR
4. Verify view permissions

ROLLBACK (N·∫æU C·∫¶N):

-- Ch·ªâ ch·∫°y n·∫øu c·∫ßn rollback
-- ALTER TABLE allergy_cards DROP COLUMN google_drive_url;
-- ALTER TABLE allergy_cards ALTER COLUMN qr_code_data SET NOT NULL;
*/
